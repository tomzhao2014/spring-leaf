// 全局属性设置
ext {
    reactorVersion = "2.0.7.RELEASE"
    springVersion = "4.2.4.RELEASE"
    jacksonVersion = "2.7.2"
    shiroVersion = "1.2.4"
}



// 所有子项目的通用配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    version = '1.0'
    // JVM 版本号要求
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    /*jar {
        Manifest.attributes provider: 'gradle'
    }*/
   /* jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }*/


    repositories{
        maven{url "http://maven.oschina.net/content/groups/public/"}
        maven {url "http://nexus.teems.cn/content/groups/public/"}
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/libs-release' }
    }

    configurations {
        // 所有需要忽略的包定义在此
       /* all*.exclude group: 'commons-httpclient'
        all*.exclude group: 'commons-logging'
        all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
  */  }

        // 通用依赖
        dependencies {
            compile (
                    "org.springframework:spring-webmvc:$springVersion",
                    "org.springframework:spring-jdbc:$springVersion",
                    "org.springframework:spring-test:$springVersion",
                    "org.springframework:spring-context-support:$springVersion",
                    'org.springframework.data:spring-data-redis:1.7.1.RELEASE',
                    "org.mybatis:mybatis:3.3.0",
                    "org.mybatis:mybatis-spring:1.2.3",
                    "com.alibaba:druid:1.0.15",
                    "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
                    "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
                    "mysql:mysql-connector-java:5.1.36",
                    "commons-fileupload:commons-fileupload:1.2.2",
                    "commons-lang:commons-lang:2.6",
                    "commons-logging:commons-logging:1.2",
                    'org.mybatis.generator:mybatis-generator-core:1.3.2',
                    "log4j:log4j:1.2.17",
                    'commons-codec:commons-codec:1.10',
                    'org.apache.commons:commons-lang3:3.4',
                    'org.apache.poi:poi:3.14',
                    'org.apache.poi:poi-ooxml:3.14',
                    'com.belerweb:pinyin4j:2.5.1',
                    'com.mortennobel:java-image-scaling:0.8.6',
                    'commons-httpclient:commons-httpclient:3.1',
                    'joda-time:joda-time:2.9.3',
                    "org.apache.shiro:shiro-core:${shiroVersion}",
                    "org.apache.shiro:shiro-web:${shiroVersion}",
                    "org.apache.shiro:shiro-spring:${shiroVersion}",
                    'org.freemarker:freemarker:2.3.23',
                    'org.apache.commons:commons-email:1.4',
                    'redis.clients:jedis:2.8.1'
            )

        // 依赖mave中不存在的jar
        ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
        ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
        ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')
        compile jarTree
        // 测试依赖
        testCompile(
                "org.springframework:spring-test:$springVersion",
                "junit:junit:4.11"
        )
    }
    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }
}


